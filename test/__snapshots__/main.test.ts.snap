// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Outputs": {
    "DistributionDomainName": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "Distribution830FAC52",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
    "UserPoolId": {
      "Value": {
        "Ref": "UserPool6BA7E5F2",
      },
    },
    "UserPoolWebClientId": {
      "Value": {
        "Ref": "UserPoolUserPoolClientFrontend671C813E",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiLogsRole90293F72": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiF70053CD": {
      "Properties": {
        "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
        "LogConfig": {
          "CloudWatchLogsRoleArn": {
            "Fn::GetAtt": [
              "ApiApiLogsRole90293F72",
              "Arn",
            ],
          },
          "FieldLogLevel": "ALL",
        },
        "Name": "Smart Home API",
        "UserPoolConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region",
          },
          "DefaultAction": "DENY",
          "UserPoolId": {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "XrayEnabled": true,
      },
      "Type": "AWS::AppSync::GraphQLApi",
    },
    "ApiLogRetention94272E33": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/appsync/apis/",
              {
                "Fn::GetAtt": [
                  "ApiF70053CD",
                  "ApiId",
                ],
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiMutationAddSensorResolverE468E82F": {
      "DependsOn": [
        "ApiSchema510EECD7",
        "ApisensorDataSource2A53A5CE",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "DataSourceName": "sensorDataSource",
        "FieldName": "addSensor",
        "Kind": "UNIT",
        "RequestMappingTemplate": "
      #set($input = $ctx.args.input)
      
      {
        "version": "2017-02-28",
        "operation": "PutItem",
        "key" : {
      "id" : $util.dynamodb.toDynamoDBJson($util.autoId())
    },
        "attributeValues": $util.dynamodb.toMapValuesJson($input)
      }",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ApiMutationDeleteSensorResolver9F337C98": {
      "DependsOn": [
        "ApiSchema510EECD7",
        "ApisensorDataSource2A53A5CE",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "DataSourceName": "sensorDataSource",
        "FieldName": "deleteSensor",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{"version": "2017-02-28", "operation": "DeleteItem", "key": {"id": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ApiMutationUpdateSensorResolver2038916D": {
      "DependsOn": [
        "ApiSchema510EECD7",
        "ApisensorDataSource2A53A5CE",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "DataSourceName": "sensorDataSource",
        "FieldName": "updateSensor",
        "Kind": "UNIT",
        "RequestMappingTemplate": "
      #set($input = $ctx.args.input)
      
      {
        "version": "2017-02-28",
        "operation": "PutItem",
        "key" : {
      "id" : $util.dynamodb.toDynamoDBJson($ctx.args.id)
    },
        "attributeValues": $util.dynamodb.toMapValuesJson($input)
      }",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ApiQueryGetSensorsResolver5D735B1C": {
      "DependsOn": [
        "ApiSchema510EECD7",
        "ApisensorDataSource2A53A5CE",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "DataSourceName": "sensorDataSource",
        "FieldName": "getSensors",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{"version" : "2017-02-28", "operation" : "Scan", "consistentRead": false}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ApiSchema510EECD7": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "Definition": "type Sensor {
  id: String!
  name: String!
  ieeeAddr: String!
}
input SensorInput {
  name: String!
  ieeeAddr: String!
}
type Query {
  getSensors: [ Sensor! ]
  @aws_auth(cognito_groups: ["Admin"])
}
type Mutation {
  addSensor(input: SensorInput!): Sensor
  @aws_auth(cognito_groups: ["Admin"])
  updateSensor(id: String!, input: SensorInput!): Sensor
  @aws_auth(cognito_groups: ["Admin"])
  deleteSensor(id: String!): Sensor
  @aws_auth(cognito_groups: ["Admin"])
}",
      },
      "Type": "AWS::AppSync::GraphQLSchema",
    },
    "ApisensorDataSource2A53A5CE": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId",
          ],
        },
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region",
          },
          "TableName": {
            "Ref": "SensorTable9068DC9C",
          },
        },
        "Name": "sensorDataSource",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApisensorDataSourceServiceRoleFF784AFE",
            "Arn",
          ],
        },
        "Type": "AMAZON_DYNAMODB",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ApisensorDataSourceServiceRoleDefaultPolicy04DBB606": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SensorTable9068DC9C",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApisensorDataSourceServiceRoleDefaultPolicy04DBB606",
        "Roles": [
          {
            "Ref": "ApisensorDataSourceServiceRoleFF784AFE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApisensorDataSourceServiceRoleFF784AFE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "de91205450df70f943fbde8ad6f4eec685d4c82c11ddec668199a8d2ec4d7065.zip",
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "DeployWithInvalidationAwsCliLayerDEDD5787",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Destination920A3C57",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Destination920A3C57",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "Destination920A3C57",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeployWithInvalidationAwsCliLayerDEDD5787": {
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9851da99dbbb72e4b5ea38e666b1b7a4d33131f3791223f114f5e999e731474d.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "DeployWithInvalidationCustomResourceE3FF7455": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketName": {
          "Ref": "Destination920A3C57",
        },
        "DistributionId": {
          "Ref": "Distribution830FAC52",
        },
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceMarkers": [
          {},
          {
            "<<marker:0xbaba:0>>": {
              "Fn::GetAtt": [
                "Distribution830FAC52",
                "DomainName",
              ],
            },
            "<<marker:0xbaba:1>>": {
              "Ref": "AWS::Region",
            },
            "<<marker:0xbaba:2>>": {
              "Ref": "UserPool6BA7E5F2",
            },
            "<<marker:0xbaba:3>>": {
              "Ref": "UserPoolUserPoolClientFrontend671C813E",
            },
            "<<marker:0xbaba:4>>": {
              "Ref": "UserPoolUserPoolDomain9F01E991",
            },
            "<<marker:0xbaba:5>>": {
              "Fn::GetAtt": [
                "ApiF70053CD",
                "GraphQLUrl",
              ],
            },
          },
        ],
        "SourceObjectKeys": [
          "1363b9f01f32785ad35fb79f74ddfc9094c6849df3b393fa8e4398e05ce86b2d.zip",
          "7f0939b28d6ee3c5b4c395a698f9a5b0daf21eb6a2cd26d16779833a4e52675f.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "Destination920A3C57": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:3af531a9",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DestinationAutoDeleteObjectsCustomResource15E926BA": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DestinationPolicy7982387E",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "Destination920A3C57",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DestinationPolicy7982387E": {
      "Properties": {
        "Bucket": {
          "Ref": "Destination920A3C57",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Destination920A3C57",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Destination920A3C57",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "OriginAccessIdentityDF1E3CAC",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Destination920A3C57",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Destination920A3C57",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "OriginAccessIdentityDF1E3CAC",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "Destination920A3C57",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "Distribution830FAC52": {
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "testDistributionOrigin1F4407531",
            "ViewerProtocolPolicy": "allow-all",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "Destination920A3C57",
                  "RegionalDomainName",
                ],
              },
              "Id": "testDistributionOrigin1F4407531",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "OriginAccessIdentityDF1E3CAC",
                      },
                    ],
                  ],
                },
              },
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OriginAccessIdentityDF1E3CAC": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Allows CloudFront to reach the bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "SensorTable9068DC9C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "UserJulianAdmin": {
      "DependsOn": [
        "UserPoolGroupAdmin",
        "UserPoolUser",
      ],
      "Properties": {
        "GroupName": "Admin",
        "UserPoolId": {
          "Ref": "UserPool6BA7E5F2",
        },
        "Username": "julian",
      },
      "Type": "AWS::Cognito::UserPoolUserToGroupAttachment",
    },
    "UserPool6BA7E5F2": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true,
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "UserPoolGroupAdmin": {
      "Properties": {
        "GroupName": "Admin",
        "UserPoolId": {
          "Ref": "UserPool6BA7E5F2",
        },
      },
      "Type": "AWS::Cognito::UserPoolGroup",
    },
    "UserPoolUser": {
      "Properties": {
        "UserAttributes": [
          {
            "Name": "email",
            "Value": "mail@julianmichel.de",
          },
          {
            "Name": "email_verified",
            "Value": "True",
          },
        ],
        "UserPoolId": {
          "Ref": "UserPool6BA7E5F2",
        },
        "Username": "julian",
      },
      "Type": "AWS::Cognito::UserPoolUser",
    },
    "UserPoolUserPoolClientFrontend671C813E": {
      "Properties": {
        "AllowedOAuthFlows": [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "openid",
          "phone",
          "email",
          "profile",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "http://localhost:4200",
          {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Fn::GetAtt": [
                    "Distribution830FAC52",
                    "DomainName",
                  ],
                },
              ],
            ],
          },
        ],
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "LogoutURLs": [
          "http://localhost:4200",
          {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Fn::GetAtt": [
                    "Distribution830FAC52",
                    "DomainName",
                  ],
                },
              ],
            ],
          },
        ],
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "UserPoolId": {
          "Ref": "UserPool6BA7E5F2",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "UserPoolUserPoolDomain9F01E991": {
      "Properties": {
        "Domain": "smart-home-dev",
        "UserPoolId": {
          "Ref": "UserPool6BA7E5F2",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
